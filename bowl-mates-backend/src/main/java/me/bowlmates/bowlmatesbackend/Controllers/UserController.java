package me.bowlmates.bowlmatesbackend.Controllers;

import me.bowlmates.bowlmatesbackend.Models.RestaurantDTO;
import me.bowlmates.bowlmatesbackend.Repositories.RestRepo;
import me.bowlmates.bowlmatesbackend.Models.TestUser;
import me.bowlmates.bowlmatesbackend.Services.RestaurantService;
import me.bowlmates.bowlmatesbackend.Repositories.UserRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;
import org.springframework.web.bind.annotation.*;




@RestController // This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /demo (after Application path)
@CrossOrigin("*")
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepo userRepository;
    @Autowired
    private RestRepo restaurantRepository;
    @Autowired
    private RestaurantService restaurantService;


    @GetMapping("/")
    public String testUser() {
        return "User level";
    }

    @PostMapping("/pref")
    public void addRestPreference(@RequestBody RestaurantDTO body) {
        restaurantService.addPreference(body.getName());
    }

//    @CrossOrigin("http://localhost:3000")
//    @GetMapping(value = "/")
//    public String showLanding(Model model){
//        String username = "";
//        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
//        if(auth != null && auth.isAuthenticated()){
//            username = auth.getName();
//        }
//        TestUser user = userRepository.findByUsername(username);
//        model.addAttribute("user", user);
//
//        return "/landing";
//    }


//    @CrossOrigin(origins = "http://localhost:3000")
//    @PostMapping(path = "/testRegister", produces="Application/json")
//    public @ResponseBody TestUser testRegister(@RequestParam("username") String username, @ModelAttribute("user") TestUser testUser) {
//
//        testUser.setName(username);
//        testUser.setEmail(username + "@mail.com");
//        testUser.setUsername(username);
//        testUser.setPassword("Geoff");
//
//        TestUser existingUser = userRepository.findByEmail(testUser.getEmail());
//
//        if(existingUser != null && existingUser.getEmail() != null && !existingUser.getEmail().isEmpty()){
//            System.out.println("Dup user");
//            return testUser;
//        }
//
//        userRepository.save(testUser);
//        System.out.println("User added");
//        return testUser;
//    }
//
//    @CrossOrigin(origins = "http://localhost:3000")
//    @GetMapping(path = "/test", produces="Application/json")
//    public @ResponseBody TestUser testApi() {
//
//        TestUser u1 = new TestUser();
//        u1.setName("u1");
//        u1.setId(1);
//        u1.setEmail("u1@mail.com");
//        return u1;
//    }
//
//    @CrossOrigin(origins = "http://localhost:3000")
//    @GetMapping(path="/all", produces="Application/json")
//    public @ResponseBody Iterable<TestUser> getAllUsers() {
//        // This returns a JSON or XML with the users
//        return userRepository.findAll();
//    }

    SecurityContextLogoutHandler logoutHandler = new SecurityContextLogoutHandler();

}
